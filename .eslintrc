{
  "extends": ["plugin:@typescript-eslint/recommended", "plugin:react/recommended", "plugin:@typescript-eslint/recommended", "prettier"],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2018,
    "sourceType": "module"
  },
  "plugins": ["prettier", "react", "@typescript-eslint"],
  "rules": {
    "newline-before-return": "error",
    "padding-line-between-statements": [
      "error",
      // Allow a blank line before return if there's other code above
      { "blankLine": "always", "prev": "*", "next": "return" },
      // No empty lines after the return statement
      { "blankLine": "never", "prev": "return", "next": "*" },
      // Ensure there is an empty line before export default
      { "blankLine": "always", "prev": "*", "next": "export" }
    ],
    "no-multiple-empty-lines": [
      "error",
      {
        "max": 1, // Allow at most one empty line
        "maxEOF": 0, // No empty lines at the end of a file
        "maxBOF": 0 // No empty lines at the beginning of a file
      }
    ],
    "react/react-in-jsx-scope": "off",
    "react/prop-types": "off",
    "react/self-closing-comp": "warn",
    "react/display-name": "off",
    "prettier/prettier": "error",
    "@typescript-eslint/no-unused-vars": [
      "warn",
      {
        "args": "all",
        "argsIgnorePattern": "^_",
        "caughtErrors": "all",
        "caughtErrorsIgnorePattern": "^_",
        "destructuredArrayIgnorePattern": "^_",
        "varsIgnorePattern": "^_",
        "ignoreRestSiblings": true
      }
    ],
    "prefer-template": "warn",
    "prefer-const": "warn",
    "prefer-arrow-callback": "warn",
    "linebreak-style": ["error", "unix"],
    "no-console": "warn"
  },
  "settings": {
    "react": {
      "version": "detect"
    }
  }
}
